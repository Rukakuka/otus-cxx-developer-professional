name: "C++ CI"

on:
  push:
    branches:
      - main
      - testing
      - feature/github_actions
  workflow_dispatch:

jobs:
  build-01-homework:
    runs-on: ubuntu-20.04
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: |
          cd 01-homework
          sudo apt-get update && sudo apt-get install cmake libboost-test-dev -y
          cmake . -DPATCH_VERSION=${{ github.run_number }}
          cmake --build .
          cmake --build . --target test
          cmake --build . --target package
        name: Build

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: hw-01-${{ github.run_number }}
          release_name: Release 01-homework ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Save built artifact
        uses: actions/upload-artifact@master
        with:
          name: 01-homework-deb
          path: ./01-homework/helloworld-0.0.${{ github.run_number }}-Linux.deb

  build-02-homework:
    runs-on: ubuntu-20.04
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: |
          cd 02-homework
          sudo apt-get update && sudo apt-get install cmake libgtest-dev -y
          mkdir -p build && cd build/
          cmake -DPROJECT_REVISION=${{ github.run_number }} ../
          cmake --build .
          cmake --build . --target test
          cmake --build . --target package
          cd ..
        name: Build

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: hw-02-${{ github.run_number }}
          release_name: Release 02-homework ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Save built artifact
        uses: actions/upload-artifact@master
        with:
          name: 02-homework-deb
          path: ./02-homework/build/ip_filter-0.0.${{ github.run_number }}-Linux.deb

  upload-assets:
    runs-on: ubuntu-20.04
    steps:
      # - uses: actions/checkout@master
      # - uses: actions/download-artifact@master
      #   with:
      #     name: 01-homework-deb
      #     path: ./01-homework/helloworld-0.0.${{ github.run_number }}-Linux.deb
      # - run: cat path/to/artifact/world.txt

      # - name: Upload Release Assets
      #   id: upload-release-assets
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./01-homework/helloworld-0.0.${{ github.run_number }}-Linux.deb
      #     asset_name: helloworld-0.0.${{ github.run_number }}-Linux.deb
      #     asset_content_type: application/vnd.debian.binary-package

      - run: |
          set -x
          assets=()
          assets+=("-a" "01-homework/helloworld-0.0.${{ github.run_number }}-Linux.deb")
          assets+=("-a" "02-homework/build/ip_filter-0.0.${{ github.run_number }}-Linux.deb")
          tag_name="${GITHUB_REF##*/}"
          hub release create "${assets[@]}" -m "$tag_name" "$tag_name"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # - name: Upload Release Asset HW2
    #   id: upload-release-asset-2
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./02-homework/build/ip_filter-0.0.${{ github.run_number }}-Linux.deb
    #     asset_name: ip_filter-0.0.${{ github.run_number }}-Linux.deb
    #     asset_content_type: application/vnd.debian.binary-package
