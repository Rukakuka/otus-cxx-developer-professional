name: "C++ CI"

on:
  push:
    branches:
      - main
      - testing
      - feature/github_actions
  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-20.04
    permissions: write-all
    steps:
      # 01-homework
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Build
        run: |
          cd ./01-homework
          sudo apt-get update && sudo apt-get install cmake libboost-test-dev -y
          mkdir -p build && cd build/
          cmake -DPATCH_VERSION=${{ github.run_number }} ../
          cmake --build .
          cmake --build . --target test
          cmake --build . --target package
          cd ..
      - name: Save built artifacts
        uses: actions/upload-artifact@v3
        with:
          name: helloworld-0.0.${{ github.run_number }}-Linux.deb
          path: ./01-homework/build/helloworld-0.0.${{ github.run_number }}-Linux.deb

      #02-homework
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Build
        run: |
          cd ./02-homework
          sudo apt-get update && sudo apt-get install cmake libgtest-dev -y
          mkdir -p build && cd build/
          cmake -DPROJECT_REVISION=${{ github.run_number }} ../
          cmake --build .
          cmake --build . --target test
          cmake --build . --target package
          cd ..
      - name: Save built artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ip_filter-0.0.${{ github.run_number }}-Linux.deb
          path: ./02-homework/build/ip_filter-0.0.${{ github.run_number }}-Linux.deb
      
      #03-homework
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Build
        run: |
          cd ./03-homework
          sudo apt-get update && sudo apt-get install cmake libgtest-dev -y
          mkdir -p build && cd build/
          cmake -DPROJECT_REVISION=${{ github.run_number }} ../
          cmake --build .
          cmake --build . --target package
          cd ..
      - name: Save built artifacts
        uses: actions/upload-artifact@v3
        with:
          name: allocator-0.0.${{ github.run_number }}-Linux.deb
          path: ./03-homework/build/allocator-0.0.${{ github.run_number }}-Linux.deb
      
      # Release
      - uses: actions/download-artifact@v3
        with:
          name: allocator-0.0.${{ github.run_number }}-Linux.deb
      - name: Release
        run: |
          sudo apt update && apt install -y git wget
          url="$(wget -qO- https://api.github.com/repos/github/hub/releases/latest | tr '"' '\n' | grep '.*/download/.*/hub-linux-amd64-.*.tgz')"
          sudo wget -qO- "$url" | tar -xzvf- -C /usr/bin --strip-components=2 --wildcards "*/bin/hub"
          sudo set -x
          assets=()
          for asset in *.deb; do
            assets+=("-a" "$asset")
          done
          tag_name="${GITHUB_REF##*/}"
          sudo hub release create "${assets[@]}" -m "Release ${{ github.run_number }}: ${{ github.event.head_commit.message }}" "homework"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
